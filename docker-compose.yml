version: '3'
services:
  db:
    image: mysql/mysql-server:latest
    restart: always
    networks:
      - internal_network
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_USER=root"
      - "MYSQL_PASSWORD=root"
      - "MYSQL_DATABASE=matel"
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  api:
    build: ./api
    image: matel-api
    restart: always
    networks:
      - internal_network
    volumes:
      - api:/main
    depends_on:
      - db

  web:
    build: ./web
    image: matel-web
    restart: always
    networks:
      - internal_network
    depends_on:
      - db
    volumes:
      - web:/var/www/dockerize-nuxt/nuxt-app
    command: "npm run start"

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_network
    environment:
      DOZZLE_NO_ANALYTICS: "true"
      DOZZLE_BASE: /logs
      DOZZLE_ADDR: "0.0.0.0:1212"

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:rw
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - api
      - web
    command: ["nginx", "-g", "daemon off;"]

  crontab:
    build: ./crontab
    restart: always

networks:
  internal_network:
  external_network:

volumes:
  api:
  web:
  db:
    driver: local
