version: '3'
services:
  db:
    image: mysql:8.0.33-debian
    restart: always
    cap_add:
      - SYS_NICE
    networks:
      - internal_network
    environment:
      - "MYSQL_ROOT_PASSWORD=root_BetaTaurus"
      - "MYSQL_USER=Beta"
      - "MYSQL_PASSWORD=BetaTaurus"
      - "MYSQL_DATABASE=matel"
    volumes:
      - db:/var/lib/mysql
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: [
        '--max_connections=10000',
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]

  phpmyadmin:
    links:
      - db:db
    image: phpmyadmin:5.2.1-apache
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root_BetaTaurus
      UPLOAD_LIMIT: 200M
      PMA_ABSOLUTE_URI: https://taurusaplikasi.com/phpmyadmin/
    networks:
      - internal_network

  api:
    build: ./api
    image: matel-api
    restart: always
    networks:
      - internal_network
    volumes:
      # - api:/app
      - ./app:/app/app
    depends_on:
      - db

  web:
    build: ./web
    image: matel-web
    restart: always
    networks:
      - internal_network
    command: "npm run start"

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_network
    environment:
      DOZZLE_NO_ANALYTICS: "true"
      DOZZLE_BASE: /logs
      DOZZLE_ADDR: "0.0.0.0:1212"

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./nginx/conf/:/usr/local/openresty-debug/nginx/conf/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    # command: ["/usr/local/openresty/bin/openresty", "-g", "daemon off;"]

  crontab:
    build: ./crontab
    restart: always

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    restart: always
    user: root
    volumes:
      - /home/yunus/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    networks:
      - internal_network

  agent:
    image: jenkins/ssh-agent:jdk11
    privileged: true
    restart: always
    user: root
    expose:
      - 22
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEyRJN5jO1w+UOejJNJJOHXOgHQEYNTY378ML6dF2Cz6 yunus@ubuntu-s-2vcpu-4gb-intel-sgp1-01-betaeagle
    networks:
      - internal_network

networks:
  internal_network:
  external_network:

volumes:
  # api:
  db:
    driver: local